<Window x:Class="StoreDbMaster.MainWindow"
        
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:StoreDbMaster"
        mc:Ignorable="d"
        Title="StoreDbMaster" Height="450" Width="800">
    <TabControl>
        <TabItem Header="Connection">
            <DockPanel LastChildFill="True">
                <TextBox x:Name="connectionStringTextBox" DockPanel.Dock="Top"  Margin="10,20,10,10">
                    <TextBox.Style>
                        <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                            <Style.Resources>
                                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                    <VisualBrush.Visual>
                                        <Label Content="SQL Server Connection String" Foreground="Gray" />
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Background" Value="White" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <Button x:Name="connectButton" Padding="25" Width="Auto" Content="Connect" Click="connectButton_Click" Margin="10,10,10,10"/>
                <RichTextBox x:Name="richTextBox" Height="Auto" Margin="10,10,10,10">

                </RichTextBox>
            </DockPanel>
        </TabItem>
        <!-- TAB ITEM CATEGORIES
        CATEGORIES
        CATEGORIES
        CATEGORIES
        CATEGORIES
        CATEGORIES
        -->
        <TabItem x:Name="tabCategories" Focusable="False" Header="Categories">
            <Grid HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition />

                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <DockPanel LastChildFill="False" Grid.Column="0" Height="Auto" VerticalAlignment="Top">
                    <Button Content="Refresh" Width="Auto" Height="Auto" Margin="10,10,10,10" DockPanel.Dock="Top"  Click="Button_Click"/>
                    <UniformGrid DockPanel.Dock="Top">

                        <TextBox x:Name="categoryName" Margin="10,0,10,10">
                            <TextBox.Style>
                                <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                    <Style.Resources>
                                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                            <VisualBrush.Visual>
                                                <Label Content="Category Name" Foreground="Gray" />
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Style.Resources>

                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="Text" Value="{x:Null}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="True">
                                            <Setter Property="Background" Value="White" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>

                        </TextBox>

                        <Button x:Name="addCategoryButton" Height="Auto" Margin="0,0,10,10" Content="Add Category" Click="addCategoryButton_Click"/>
                        <TextBox x:Name="deleteCategory" Margin="10,0,10,10">
                            <TextBox.Style>
                                <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                    <Style.Resources>
                                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                            <VisualBrush.Visual>
                                                <Label Content="Category ID" Foreground="Gray" />
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Style.Resources>
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="Text" Value="{x:Null}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="True">
                                            <Setter Property="Background" Value="White" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>

                        </TextBox>
                        <Button x:Name="deleteCategoryButton" Height="Auto" Margin="0,0,10,10" Content="Delete Category" Click="deleteCategoryButton_Click"/>
                    </UniformGrid>
                </DockPanel>
                <DataGrid x:Name="dataGridCategories" Grid.Column="1" d:ItemsSource="{d:SampleData ItemCount=5}" Width="Auto" />
                <GridSplitter Grid.Column="1" Opacity="0" HorizontalAlignment="Left" Height="10000" Margin="0,0,0,0" VerticalAlignment="Top" Width="5"/>

            </Grid>
        </TabItem>
        <!-- TAB ITEM PRODUCTS
            PRODUCTS
            PRODUCTS
            PRODUCTS
            PRODUCTS
            PRODUCTS
            PRODUCTS
            -->
        <TabItem Header="Products">

            <Grid HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition />

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>


                <DockPanel LastChildFill="False" Grid.Column="0" Height="Auto" VerticalAlignment="Top">
                    <Button Content="Refresh" Width="Auto" Height="Auto" Margin="10,10,10,10" DockPanel.Dock="Top"  Click="refreshProductsButton"/>
                    <ComboBox Width="Auto" x:Name="categoryCatalog" Margin="10,0,10,10" DockPanel.Dock="Top" SelectedIndex="1">


                    </ComboBox>

                    <UniformGrid DockPanel.Dock="Top">
                        <TextBox x:Name="productName" Margin="10,0,10,10">
                            <TextBox.Style>
                                <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                    <Style.Resources>
                                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                            <VisualBrush.Visual>
                                                <Label Content="Product Name" Foreground="Gray" />
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Style.Resources>

                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="Text" Value="{x:Null}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="True">
                                            <Setter Property="Background" Value="White" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>

                        </TextBox>
                        <TextBox x:Name="productPrice" Margin="0,0,10,10">
                            <TextBox.Style>
                                <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                    <Style.Resources>
                                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                            <VisualBrush.Visual>
                                                <Label Content="Product Price" Foreground="Gray" />
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Style.Resources>

                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="Text" Value="{x:Null}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="True">
                                            <Setter Property="Background" Value="White" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>

                        </TextBox>
                        <TextBox x:Name="productStoredQuantity" Margin="10,0,10,10">
                            <TextBox.Style>
                                <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                    <Style.Resources>
                                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                            <VisualBrush.Visual>
                                                <Label Content="Quantity" Foreground="Gray" />
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Style.Resources>

                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="Text" Value="{x:Null}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="True">
                                            <Setter Property="Background" Value="White" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>

                        </TextBox>
                        <TextBox x:Name="productWarranty" Margin="0,0,10,10">
                            <TextBox.Style>
                                <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                    <Style.Resources>
                                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                            <VisualBrush.Visual>
                                                <Label Content="Warranty (Months)" Foreground="Gray" />
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Style.Resources>

                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="Text" Value="{x:Null}">
                                            <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="True">
                                            <Setter Property="Background" Value="White" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>

                        </TextBox>
                    </UniformGrid>

                    <Button Content="Add Product" Width="Auto" DockPanel.Dock="Top" Margin="10,0,10,10" Click="addProductButton"/>
                    <UniformGrid DockPanel.Dock="Top">
                        <TextBox Margin="10,0,10,10" x:Name="ProductDeletionID"></TextBox>
                        <Button Margin="10,0,10,10" Click="productDelete">Delete Product</Button>

                        <TextBox  Margin="10,0,10,10" x:Name="ProductCountToLoad"></TextBox>
                        <Button  Margin="10,0,10,10" Click="LoadNewProducts">Load Products</Button>
                    </UniformGrid>
                    <ComboBox x:Name="productCatalog" Margin="10,0,10,10" DockPanel.Dock="Top" SelectedIndex="1"></ComboBox>
                </DockPanel>
                <DataGrid x:Name="dataGridProducts" Grid.Column="1" d:ItemsSource="{d:SampleData ItemCount=5}" Width="Auto" />
                <GridSplitter Grid.Column="1" Opacity="0" HorizontalAlignment="Left" Height="10000" Margin="0,0,0,0" VerticalAlignment="Top" Width="5"/>

            </Grid>
        </TabItem>

        <!-- Customer Accounts-->
        <TabItem Header="Customer Accounts">
            <Grid HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition />

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Vertical">
                    <DockPanel Margin="5">
                        <Label Content="Name: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="AccountName" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="Surame: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="AccountSurname" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="Email: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="AccountEmail" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>

                    <DockPanel Margin="5">

                        <CheckBox x:Name="Newsletter" Content="Newsletter"></CheckBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="Password: " DockPanel.Dock="Left"></Label>
                        <PasswordBox x:Name="AccountPassword" DockPanel.Dock="Right"></PasswordBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="Phone: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="AccountPhone" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="Shipping Address: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="AccountShippingAddress" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>

                    <UniformGrid Margin="0">
                        <Button HorizontalAlignment="Stretch" Margin="5,0,5,0" Content="Refresh" Click="accountRefreshButton"></Button>
                        <Button HorizontalAlignment="Stretch"  Margin="5,0,5,0" Content="Register" Click="registerUser"></Button>
                        <TextBox x:Name="AccountDeletionID" Margin="5,5,5,0"></TextBox>
                        <Button HorizontalAlignment="Stretch" Margin="5,5,5,0" Content="Delete" Click="deleteAccount"></Button>
                    </UniformGrid>
                </StackPanel>
                <DataGrid x:Name="dataGridAccounts" Grid.Column="1" d:ItemsSource="{d:SampleData ItemCount=5}" Width="Auto" />
                <GridSplitter Grid.Column="1" Opacity="0" HorizontalAlignment="Left" Height="10000" Margin="0,0,0,0" VerticalAlignment="Top" Width="5"/>

            </Grid>

        </TabItem>
        <!-- Payment Information-->
        <TabItem Header="Payment Information">
            <Grid HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition />

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Vertical">
                    <DockPanel Margin="5">
                        <Label Content="ID: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="PaymentID" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="Card Number: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="CardNumbet" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="CVC: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="CVC" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="Name: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="CardholderName" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="Surname: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="CardholderSurname" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="Billing Address: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="BillingAddress" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="AccountID: " DockPanel.Dock="Left"></Label>
                        <ComboBox x:Name="accountIdCatalog"></ComboBox>
                    </DockPanel>

                    <UniformGrid Margin="0">
                        <Button HorizontalAlignment="Stretch" Margin="5,0,5,0" Content="Refresh" Click="paymentRefreshButton"></Button>
                        <Button HorizontalAlignment="Stretch"  Margin="5,0,5,0" Content="Add Payment Info" Click="addPaymentMethod"></Button>
                        <TextBox x:Name="PaymentDeletionID" Margin="5,5,5,0"></TextBox>
                        <Button HorizontalAlignment="Stretch" Margin="5,5,5,0" Content="Delete" Click="deletePayment"></Button>

                    </UniformGrid>
                </StackPanel>
                <DataGrid x:Name="dataGridPaymentInformation" Grid.Column="1" d:ItemsSource="{d:SampleData ItemCount=5}" Width="Auto" />
                <GridSplitter Grid.Column="1" Opacity="0" HorizontalAlignment="Left" Height="10000" Margin="0,0,0,0" VerticalAlignment="Top" Width="5"/>

            </Grid>
        </TabItem>

        <!-- Discounts-->
        <TabItem Header="Discounts">
            <Grid HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition />

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <StackPanel>
                    <DockPanel Margin="5">
                        <Label Content="Discount Name: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="DiscountName" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="Discount %: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="DiscountPercentage" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>

                    <UniformGrid Margin="0">
                        <Button HorizontalAlignment="Stretch" Margin="5,0,5,0" Content="Refresh" Click=" discountRefresh"></Button>
                        <Button HorizontalAlignment="Stretch"  Margin="5,0,5,0" Content="Add Discount" Click="addDiscount"></Button>
                        <TextBox x:Name="DiscountDeletionID" Margin="5,5,5,0"></TextBox>
                        <Button HorizontalAlignment="Stretch" Margin="5,5,5,0" Content="Delete" Click="deleteDiscount"></Button>
                    </UniformGrid>
                </StackPanel>
                <DataGrid x:Name="dataGridDiscounts" Grid.Column="1" d:ItemsSource="{d:SampleData ItemCount=5}" Width="Auto" />
                <GridSplitter Grid.Column="1" Opacity="0" HorizontalAlignment="Left" Height="10000" Margin="0,0,0,0" VerticalAlignment="Top" Width="5"/>

            </Grid>
        </TabItem>

        <TabItem Header="Purchase">
            <Grid HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition />

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="346.894"/>
                    <ColumnDefinition Width="53.106"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Vertical" Grid.ColumnSpan="2">
                    <DockPanel Margin="5">
                        <Label Content="Email: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="TransactionEmail" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>


                    <DockPanel Margin="5">
                        <Label Content="Password: " DockPanel.Dock="Left"></Label>
                        <PasswordBox x:Name="TransactionPassword" DockPanel.Dock="Right"></PasswordBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="Product " DockPanel.Dock="Left"></Label>
                        <ComboBox SelectedIndex="1" x:Name="TransactionProductCatalog" DockPanel.Dock="Right"></ComboBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="Quantity: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="TransactionProductCount" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="Discount " DockPanel.Dock="Left"></Label>
                        <ComboBox x:Name="TransactionDiscountCatalog" DockPanel.Dock="Right"></ComboBox>
                    </DockPanel>

                    <DockPanel Margin="5">
                        <Label Content="Your Money: " DockPanel.Dock="Left"></Label>
                        <TextBox x:Name="TransactionMoney" DockPanel.Dock="Right"></TextBox>
                    </DockPanel>

                    <Button Height="30" Margin="5,5,5,0" Click="buyItem">
                        BUY
                    </Button>
                </StackPanel>
                <DataGrid x:Name="dataGridTransactions" Grid.Column="2" d:ItemsSource="{d:SampleData ItemCount=5}" Width="Auto" />
                <GridSplitter Grid.Column="2" Opacity="0" HorizontalAlignment="Left" Height="10000" Margin="0,0,0,0" VerticalAlignment="Top" Width="5"/>

            </Grid>
        </TabItem>

        <TabItem Header="Queries" IsEnabled="False">
            <Grid HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition />

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <StackPanel>
                    <Button Margin="5" Click="buttonQuery">Query1</Button>
                    <Button Margin="5" Click="buttonQuery">Query2</Button>
                    <Button Margin="5" Click="buttonQuery">Query3</Button>
                    <Button Margin="5" Click="buttonQuery">Query4</Button>
                    <Button Margin="5" Click="buttonQuery">Query5</Button>
                    <Button Margin="5" Click="buttonQuery">Query7</Button>
                    <Button Margin="5" Click="buttonQuery">Query8</Button>
                    <Button Margin="5" Click="buttonQuery">Query12</Button>
                    <Button Margin="5" Click="buttonQuery">Query13</Button>
                    <Button Margin="5" Click="buttonQuery">Query14</Button>
                    <Button Margin="5" Click="buttonQuery">Query15</Button>
                </StackPanel>
                <DataGrid x:Name="dataGridQuery" Grid.Column="1" d:ItemsSource="{d:SampleData ItemCount=5}" Width="Auto" />

            </Grid>

        </TabItem>
    </TabControl>



</Window>
